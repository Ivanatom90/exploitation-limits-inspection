#include "catalog.h"




    EP::EP(int blok_num): blok_number(blok_num){                                           //Конструктор
        GetExpLim();
    }


void EP::GetNameKKS()
{
    ifstream file(parameters_names_);
    string s;
    string KKS_s;
    string name;
    for (int i=0;i<5;i++)
    {
        getline(file, s);
    }


    while(getline(file, s))
    {
        string_view str = s;
        int space = str.find('|');
        KKS_s = str.substr(0, space-1);
        str.remove_prefix(space+1);
        space = str.find('|');
        name = str.substr(0, space);
        KKS_translator[KKS_s] = name;
    }

}


        void EP::GetExpLim()
        {
            GetNameKKS();
            if(blok_number == 1){

                EL_Down["10JKS24FX906XQ01"] =  0;
                EL_Down["10JKS87FX904XQ01"] =  1.7;
                EL_Down["10JKT00FK001XQ01"] = 60;
                EL_UP["10JKT00FU001XQ02"] = 101;
                EL_UP["10JKS00FU901XQ01"] = 3264;
                EL_Down["10JKS51FT906XQ01"] = 0;
                EL_Down["10JAA10FP901XQ01"] = 15.8;
                EL_UP["10JAA10FP901XQ01"] = 16.4;

                EL_UP["10JEC11CT815XQ01"] = 332;
                EL_UP["10JEC11CT835XQ01"] = 332;
                EL_UP["10JEC11CT825XQ01"] = 332;
                EL_UP["10JEC11CT845XQ01"] = 332;

                EL_UP["10JEC21CT815XQ01"] = 332;
                EL_UP["10JEC21CT825XQ01"] = 332;
                EL_UP["10JEC21CT835XQ01"] = 332;
                EL_UP["10JEC21CT845XQ01"] = 332;

                EL_UP["10JEC31CT815XQ01"] = 332;
                EL_UP["10JEC31CT825XQ01"] = 332;
                EL_UP["10JEC31CT835XQ01"] = 332;
                EL_UP["10JEC31CT845XQ01"] = 332;

                EL_UP["10JEC41CT815XQ01"] = 332;
                EL_UP["10JEC41CT825XQ01"] = 332;
                EL_UP["10JEC41CT835XQ01"] = 332;
                EL_UP["10JEC41CT845XQ01"] = 332;

                EL_UP["10JEC10FT001XQ01"] = 32.5;
                EL_UP["10JEC20FT001XQ01"] = 32.5;
                EL_UP["10JEC30FT001XQ01"] = 32.5;
                EL_UP["10JEC40FT001XQ01"] = 32.5;

                EL_UP["10JEC10FU001XQ01"] = 830;
                EL_UP["10JEC20FU001XQ01"] = 830;
                EL_UP["10JEC30FU001XQ01"] = 830;
                EL_UP["10JEC40FU001XQ01"] = 830;

                EL_UP["10JKS51FT902XQ01"] = 346;

                EL_UP["10JEC13CT815XQ01"] = 299.5;
                EL_UP["10JEC13CT825XQ01"] = 299.5;
                EL_UP["10JEC13CT835XQ01"] = 299.5;
                EL_UP["10JEC13CT845XQ01"] = 299.5;

                EL_UP["10JEC23CT815XQ01"] = 299.5;
                EL_UP["10JEC23CT825XQ01"] = 299.5;
                EL_UP["10JEC23CT835XQ01"] = 299.5;
                EL_UP["10JEC23CT845XQ01"] = 299.5;

                EL_UP["10JEC33CT815XQ01"] = 299.5;
                EL_UP["10JEC33CT825XQ01"] = 299.5;
                EL_UP["10JEC33CT835XQ01"] = 299.5;
                EL_UP["10JEC33CT845XQ01"] = 299.5;

                EL_UP["10JEC43CT815XQ01"] = 299.5;
                EL_UP["10JEC43CT825XQ01"] = 299.5;
                EL_UP["10JEC43CT835XQ01"] = 299.5;
                EL_UP["10JEC43CT845XQ01"] = 299.5;

                EL_UP["10JEC00FF903XQ02"] = 91600;
                //EL_UP["10JEC00FF903XQ02"] = 90100;
                EL_Down["10JEC00FF903XQ02"] = 85800;

                EL_UP["10JEA10CP001XQ01"] = 7.0;
                EL_UP["10JEA20CP001XQ01"] = 7.0;
                EL_UP["10JEA30CP001XQ01"] = 7.0;
                EL_UP["10JEA40CP001XQ01"] = 7.0;

                EL_Down["10JEA10CP001XQ01"] = 6.8;
                EL_Down["10JEA20CP001XQ01"] = 6.8;
                EL_Down["10JEA30CP001XQ01"] = 6.8;
                EL_Down["10JEA40CP001XQ01"] = 6.8;

                parameters_names_ = "input_names/EP_names_b1.txt";
            } else if (blok_number == 2){

                EL_Down["20JKS24FX906XQ01"] =  0;
                EL_Down["20JKS87FX904XQ01"] =  1.7;
                EL_Down["20JKT00FK001XQ01"] = 60;
                EL_UP["20JKT00FU001XQ02"] = 101;
                EL_UP["20JKS00FU901XQ01"] = 3264;
                EL_Down["20JKS51FT906XQ01"] = 0;
                EL_Down["20JAA10FP901XQ01"] = 15.8;
                EL_UP["20JAA10FP901XQ01"] = 16.4;

                EL_UP["20JEC11CT815XQ01"] = 332;
                EL_UP["20JEC11CT835XQ01"] = 332;
                EL_UP["20JEC11CT825XQ01"] = 332;
                EL_UP["20JEC11CT845XQ01"] = 332;

                EL_UP["20JEC21CT815XQ01"] = 332;
                EL_UP["20JEC21CT825XQ01"] = 332;
                EL_UP["20JEC21CT835XQ01"] = 332;
                EL_UP["20JEC21CT845XQ01"] = 332;

                EL_UP["20JEC31CT815XQ01"] = 332;
                EL_UP["20JEC31CT825XQ01"] = 332;
                EL_UP["20JEC31CT835XQ01"] = 332;
                EL_UP["20JEC31CT845XQ01"] = 332;

                EL_UP["20JEC41CT815XQ01"] = 332;
                EL_UP["20JEC41CT825XQ01"] = 332;
                EL_UP["20JEC41CT835XQ01"] = 332;
                EL_UP["20JEC41CT845XQ01"] = 332;

                EL_UP["20JEC10FT001XQ01"] = 31;
                EL_UP["20JEC20FT001XQ01"] = 31;
                EL_UP["20JEC30FT001XQ01"] = 31;
                EL_UP["20JEC40FT001XQ01"] = 31;

                EL_UP["20JEC10FU001XQ01"] = 830;
                EL_UP["20JEC20FU001XQ01"] = 830;
                EL_UP["20JEC30FU001XQ01"] = 830;
                EL_UP["20JEC40FU001XQ01"] = 830;

                EL_UP["20JKS51FT902XQ01"] = 346;

                EL_UP["20JEC13CT815XQ01"] = 299.5;
                EL_UP["20JEC13CT825XQ01"] = 299.5;
                EL_UP["20JEC13CT835XQ01"] = 299.5;
                EL_UP["20JEC13CT845XQ01"] = 299.5;

                EL_UP["20JEC23CT815XQ01"] = 299.5;
                EL_UP["20JEC23CT825XQ01"] = 299.5;
                EL_UP["20JEC23CT835XQ01"] = 299.5;
                EL_UP["20JEC23CT845XQ01"] = 299.5;

                EL_UP["20JEC33CT815XQ01"] = 300.2;
                EL_UP["20JEC33CT825XQ01"] = 300.2;
                EL_UP["20JEC33CT835XQ01"] = 300.2;
                EL_UP["20JEC33CT845XQ01"] = 300.2;

                EL_UP["20JEC43CT815XQ01"] = 299.5;
                EL_UP["20JEC43CT825XQ01"] = 299.5;
                EL_UP["20JEC43CT835XQ01"] = 299.5;
                EL_UP["20JEC43CT845XQ01"] = 299.5;

                EL_UP["20JEC00FF903XQ02"] = 91600;
                //EL_UP["20JEC00FF903XQ02"] = 90100;
                EL_Down["20JEC00FF903XQ02"] = 85800;

                EL_UP["20JEA10CP001XQ01"] = 7.0;
                EL_UP["20JEA20CP001XQ01"] = 7.0;
                EL_UP["20JEA30CP001XQ01"] = 7.0;
                EL_UP["20JEA40CP001XQ01"] = 7.0;

                EL_Down["20JEA10CP001XQ01"] = 6.8;
                EL_Down["20JEA20CP001XQ01"] = 6.8;
                EL_Down["20JEA30CP001XQ01"] = 6.8;
                EL_Down["20JEA40CP001XQ01"] = 6.8;

                parameters_names_ = "input_names/EP_names_b2.txt";
            }
        }

        void EP::GetParameters()
        {

            GetNameKKS();
            std::ifstream file("EP.txt");
            string str;
            for (int i=0; i<5; i++)
            {
                getline(file, str);
                if (i==1){
                    scan_date_ = str;
                } else if(i==2){
                    scan_date_+=str;
                }
            }

            KKS = ReadlineS(str);
            Par.resize(KKS.size());
            ofstream outfile("answer/output.txt");
            outfile<<scan_date_<<'\n'<<"Scan_explotation_limits_begin"<<endl;
            bool flag = false;
            while (getline(file, str))
            {
                Time = GetTime(str);
                Par = ReadlineNum(str);
                int i =0;
                    for (const string& k:KKS){
                        KKS_par[k] = &Par[i];
                        i++;
                    }

                    (blok_number ==1) ? Naknp = *KKS_par["11CLA75FX004AXQ1"] : Naknp = *KKS_par["21CLA75FX004AXQ1"];


                    if(Naknp>80)
                    {
                            for (const pair<string, double>& k:EL_UP){
                                const double *lim_up = &k.second;
                                const double *par = KKS_par.at(k.first);
                                if(*par>*lim_up){
                                    if(!flag){
                                       outfile<<"Date       Time                KKS                   Znachenie               Explotation_limit"<<endl;
                                    }
                                    //cout<<Time<<"      "<<k.first<<"       "<<*par<<"          limit_up_get     "<<*lim_up<<endl;
                                    outfile<<Time<<"      "<<k.first<<"       "<<*par<<"          limit_up_break     "<<*lim_up<<"      "<<KKS_translator[k.first] <<endl;
                                    Explutation_limits_break.insert(k.first);
                                    flag = true;
                                }

                            }

                            for (const pair<string, double>& k:EL_Down){
                                const double *lim_down = &k.second;
                                const double *par = KKS_par.at(k.first);
                                if(*par<*lim_down){
                                    //cout<<Time<<"      "<<k.first<<"       "<<*par<<"          limit_down_break   "<<*lim_up<<endl;
                                    if(!flag){
                                       outfile<<"Date       Time                KKS                   Znachenie               Explotation_limit"<<endl;
                                    }
                                    outfile<<Time<<"      "<<k.first<<"       "<<*par<<"          limit_down_break   "<<*lim_down<<"      "<<KKS_translator[k.first]<<endl;
                                    Explutation_limits_break.insert(k.first);
                                    flag = true;
                                }
                            }
                     }




            }
           //outfile<<KKS<<endl;
            ofstream report("answer/report.txt");
           for(const pair<string, string> a:KKS_translator){
               Explutation_limits_break.count(a.first);
               if(!Explutation_limits_break.count(a.first)){
                   report<<a.first<<"    "<<a.second<<"   Net_narusheniy_EP"<<endl;
               }

           }

           report<<'\n'<<"ExpLim_brick"<<endl;

           for(const string& KKSkk:Explutation_limits_break ){
               report<<KKSkk<<"    "<<KKS_translator.at(KKSkk)<<endl;
           }

           report<<"Scan_expl_limit_end"<<endl;
           (flag) ? report<<"Explutation_limits_break"<<endl : report<<"Explutation_limits_NOT_break"<<endl;
           report.close();

        }

